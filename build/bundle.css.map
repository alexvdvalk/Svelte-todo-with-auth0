{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Flex.svelte",
    "Todo.svelte",
    "TodoForm.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n  export let direction = 'row';\n  export let align = 'center';\n  export let justify = 'center';\n  export let reverse = false;\n\n  $: className = [\n    'flex',\n    `flex-direction--${direction}${reverse ? '--reverse' : ''}`,\n    `flex-align--${align}`,\n    `flex-justify--${justify}`,\n    //  Apply any additional/custom classNames, if provided\n    $$restProps.class ? $$restProps.class : '',\n  ].join(' ');\n\n</script>\n\n<style>\n  .flex {\n    display: flex;\n  }\n  /* Direction: 'row' | 'column' */\n  .flex-direction--row {\n    flex-direction: row;\n  }\n  .flex-direction--column {\n    flex-direction: column;\n  }\n  /* Reverse the order */\n  .flex-direction--row--reverse {\n    flex-direction: row-reverse;\n  }\n  .flex-direction--column--reverse {\n    flex-direction: column-reverse;\n  }\n  /* Align: 'start' | 'center' | 'end' | 'stretch' */\n  .flex-align--start {\n    align-items: flex-start;\n  }\n  .flex-align--center {\n    align-items: center;\n  }\n  .flex-align--end {\n    align-items: flex-end;\n  }\n  .flex-align--stretch {\n    align-items: stretch;\n  }\n  /* Justfy: 'start' | 'center' | 'end' | 'around' | 'between' | 'evenly' */\n  .flex-justify--start {\n    justify-content: flex-start;\n  }\n  .flex-justify--center {\n    justify-content: center;\n  }\n  .flex-justify--end {\n    justify-content: flex-end;\n  }\n  .flex-justify--around {\n    justify-content: space-around;\n  }\n  .flex-justify--between {\n    justify-content: space-between;\n  }\n  .flex-justify--evenly {\n    justify-content: space-evenly;\n  }\n</style>\n\n<div {...$$restProps} class={className}>\n\t<slot></slot>\n</div>\n",
    "<script lang=\"ts\">import { fade } from \"svelte/transition\";\r\n;\r\nimport { deleteTodoID, toggleCompleteStatus } from \"./todoList\";\r\nimport { userSub } from \"../auth0.config\";\r\nexport let todo;\r\nexport let id;\r\nconst deleteTodo = () => {\r\n    deleteTodoID(id);\r\n};\r\nconst toggleComplete = () => {\r\n    toggleCompleteStatus(id);\r\n};\r\n</script>\r\n\r\n<style>\r\n  .row {\r\n    margin-top: 10px;\r\n    border: 1px solid black;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n  }\r\n</style>\r\n\r\n<!-- HTML -->\r\n<div class=\"row\" transition:fade>\r\n  <div class=\"col-sm\">{id + 1}: {todo.title}</div>\r\n  <div class=\"col-sm\">Complete: {todo.complete}</div>\r\n  <div class=\"col-sm\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-secondary\"\r\n      disabled={!$userSub}\r\n      on:click={deleteTodo}>Delete</button>\r\n  </div>\r\n  <div class=\"col-sm\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-primary\"\r\n      disabled={!$userSub}\r\n      on:click={toggleComplete}>Mark As {todo.complete ? 'Incomplete' : 'Complete'}</button>\r\n  </div>\r\n</div>\r\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { addTodo, addRandom } from \"./todoList\";\r\nimport Flex from \"svelte-flex\";\r\nlet title;\r\nlet fetchingRandom = false;\r\nconst addRandomTodo = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    fetchingRandom = true;\r\n    yield addRandom();\r\n    fetchingRandom = false;\r\n});\r\n</script>\r\n\r\n<style>\r\n  form {\r\n    margin-bottom: 20px;\r\n    margin-top: 20px;\r\n  }\r\n</style>\r\n\r\n<form class=\"form-inline\" on:submit|preventDefault>\r\n  <Flex direction=\"row wrap\" align=\"start\">\r\n    <div class=\"form-group mb-2\">\r\n      <input\r\n        type=\"text\"\r\n        bind:value={title}\r\n        class=\"form-control\"\r\n        placeholder=\"Create a new task\" />\r\n    </div>\r\n\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary mb-2\"\r\n      on:click={() => addTodo(title)}>Submit</button>\r\n    <button\r\n      type=\"button\"\r\n      disabled={fetchingRandom}\r\n      class=\"btn btn-primary mb-2\"\r\n      on:click={() => addRandomTodo()}>Add Random Todo</button>\r\n  </Flex>\r\n</form>\r\n"
  ],
  "names": [],
  "mappings": "AAmBE,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,AACf,CAAC,AAED,oBAAoB,cAAC,CAAC,AACpB,cAAc,CAAE,GAAG,AACrB,CAAC,AACD,uBAAuB,cAAC,CAAC,AACvB,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,6BAA6B,cAAC,CAAC,AAC7B,cAAc,CAAE,WAAW,AAC7B,CAAC,AACD,gCAAgC,cAAC,CAAC,AAChC,cAAc,CAAE,cAAc,AAChC,CAAC,AAED,kBAAkB,cAAC,CAAC,AAClB,WAAW,CAAE,UAAU,AACzB,CAAC,AACD,mBAAmB,cAAC,CAAC,AACnB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,gBAAgB,cAAC,CAAC,AAChB,WAAW,CAAE,QAAQ,AACvB,CAAC,AACD,oBAAoB,cAAC,CAAC,AACpB,WAAW,CAAE,OAAO,AACtB,CAAC,AAED,oBAAoB,cAAC,CAAC,AACpB,eAAe,CAAE,UAAU,AAC7B,CAAC,AACD,qBAAqB,cAAC,CAAC,AACrB,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,kBAAkB,cAAC,CAAC,AAClB,eAAe,CAAE,QAAQ,AAC3B,CAAC,AACD,qBAAqB,cAAC,CAAC,AACrB,eAAe,CAAE,YAAY,AAC/B,CAAC,AACD,sBAAsB,cAAC,CAAC,AACtB,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,qBAAqB,cAAC,CAAC,AACrB,eAAe,CAAE,YAAY,AAC/B,CAAC;ACpDD,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,AACpB,CAAC;ACCD,IAAI,cAAC,CAAC,AACJ,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,IAAI,AAClB,CAAC"
}